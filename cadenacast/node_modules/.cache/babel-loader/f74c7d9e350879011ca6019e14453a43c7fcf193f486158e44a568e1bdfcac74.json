{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jasper\\\\CadenaCast\\\\cadenacast\\\\src\\\\components\\\\AdminControlsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/AdminControls.css'; // Import the CSS\nimport SideNavTab from './SideNavTab'; // Import Sidebar Component\nimport Modal from './Modal'; // Import Modal Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminControlsPage = () => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalTitle, setModalTitle] = useState('');\n  const [modalContent, setModalContent] = useState('');\n  const [actionType, setActionType] = useState('');\n\n  // Function to open modal for a specific action\n  const openModal = action => {\n    if (action === 'startElection') {\n      setModalTitle('Start Election');\n      setModalContent('You are about to start the election. Proceed with opening the polls.');\n      setActionType('startElection');\n    } else if (action === 'pauseVoting') {\n      setModalTitle('Pause Voting');\n      setModalContent('You are about to pause the voting. Make sure all participants are informed.');\n      setActionType('pauseVoting');\n    } else if (action === 'endElection') {\n      setModalTitle('End Election');\n      setModalContent('You are about to end the election. Proceed with closing the polls and calculating results.');\n      setActionType('endElection');\n    }\n    setIsModalOpen(true);\n  };\n\n  // Function to close modal\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalTitle('');\n    setModalContent('');\n  };\n\n  // Handle \"Confirm\" button\n  const handleConfirm = () => {\n    if (actionType === 'startElection') {\n      console.log('Starting the election...');\n      // You can add more logic for starting the election\n    } else if (actionType === 'pauseVoting') {\n      console.log('Pausing the voting...');\n      // Add logic for pausing voting\n    } else if (actionType === 'endElection') {\n      console.log('Ending the election...');\n      // Add logic for ending the election\n    }\n    closeModal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: /*#__PURE__*/_jsxDEV(SideNavTab, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ADMIN CONTROLS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-banner\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"STATUS OF ELECTION: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), \"NOT STARTED\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-card\",\n          onClick: () => openModal('startElection'),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: \"\\u25B6\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"START ELECTION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Initiate the voting process and open polls to all registered voters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-card\",\n          onClick: () => openModal('pauseVoting'),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: \"\\u23F8\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"PAUSE VOTING\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Temporarily suspend voting activity for system maintenance.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-card\",\n          onClick: () => openModal('endElection'),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon\",\n            children: \"\\u23F9\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"END ELECTION\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Close voting permanently and prepare for results calculation.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: closeModal,\n        title: modalTitle,\n        content: modalContent,\n        onConfirm: handleConfirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminControlsPage, \"Ej1cErLgXvdbTI7gaswPH3Hd5aU=\");\n_c = AdminControlsPage;\nexport default AdminControlsPage;\nvar _c;\n$RefreshReg$(_c, \"AdminControlsPage\");","map":{"version":3,"names":["React","useState","SideNavTab","Modal","jsxDEV","_jsxDEV","AdminControlsPage","_s","isModalOpen","setIsModalOpen","modalTitle","setModalTitle","modalContent","setModalContent","actionType","setActionType","openModal","action","closeModal","handleConfirm","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","title","content","onConfirm","_c","$RefreshReg$"],"sources":["C:/Users/Jasper/CadenaCast/cadenacast/src/components/AdminControlsPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/AdminControls.css'; // Import the CSS\r\nimport SideNavTab from './SideNavTab'; // Import Sidebar Component\r\nimport Modal from './Modal'; // Import Modal Component\r\n\r\nconst AdminControlsPage = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [modalTitle, setModalTitle] = useState('');\r\n  const [modalContent, setModalContent] = useState('');\r\n  const [actionType, setActionType] = useState('');\r\n\r\n  // Function to open modal for a specific action\r\n  const openModal = (action) => {\r\n    if (action === 'startElection') {\r\n      setModalTitle('Start Election');\r\n      setModalContent('You are about to start the election. Proceed with opening the polls.');\r\n      setActionType('startElection');\r\n    } else if (action === 'pauseVoting') {\r\n      setModalTitle('Pause Voting');\r\n      setModalContent('You are about to pause the voting. Make sure all participants are informed.');\r\n      setActionType('pauseVoting');\r\n    } else if (action === 'endElection') {\r\n      setModalTitle('End Election');\r\n      setModalContent('You are about to end the election. Proceed with closing the polls and calculating results.');\r\n      setActionType('endElection');\r\n    }\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  // Function to close modal\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setModalTitle('');\r\n    setModalContent('');\r\n  };\r\n\r\n  // Handle \"Confirm\" button\r\n  const handleConfirm = () => {\r\n    if (actionType === 'startElection') {\r\n      console.log('Starting the election...');\r\n      // You can add more logic for starting the election\r\n    } else if (actionType === 'pauseVoting') {\r\n      console.log('Pausing the voting...');\r\n      // Add logic for pausing voting\r\n    } else if (actionType === 'endElection') {\r\n      console.log('Ending the election...');\r\n      // Add logic for ending the election\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      <div className=\"sidebar\">\r\n        <SideNavTab />\r\n      </div>\r\n\r\n      <div className=\"main\">\r\n        <h1>ADMIN CONTROLS</h1>\r\n\r\n        <div className=\"status-banner\">\r\n          <strong>STATUS OF ELECTION: </strong>NOT STARTED\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <div className=\"control-card\" onClick={() => openModal('startElection')}>\r\n            <div className=\"icon\">▶️</div>\r\n            <h2>START ELECTION</h2>\r\n            <p>Initiate the voting process and open polls to all registered voters.</p>\r\n          </div>\r\n\r\n          <div className=\"control-card\" onClick={() => openModal('pauseVoting')}>\r\n            <div className=\"icon\">⏸️</div>\r\n            <h2>PAUSE VOTING</h2>\r\n            <p>Temporarily suspend voting activity for system maintenance.</p>\r\n          </div>\r\n\r\n          <div className=\"control-card\" onClick={() => openModal('endElection')}>\r\n            <div className=\"icon\">⏹️</div>\r\n            <h2>END ELECTION</h2>\r\n            <p>Close voting permanently and prepare for results calculation.</p>\r\n          </div>\r\n        </div>\r\n\r\n        <Modal\r\n          isOpen={isModalOpen}\r\n          onClose={closeModal}\r\n          title={modalTitle}\r\n          content={modalContent}\r\n          onConfirm={handleConfirm}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminControlsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}