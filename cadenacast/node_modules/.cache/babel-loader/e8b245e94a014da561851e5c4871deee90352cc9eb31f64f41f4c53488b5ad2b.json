{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jasper\\\\CadenaCast\\\\cadenacast\\\\src\\\\components\\\\votingTimer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownTimer = () => {\n  _s();\n  const targetDate = new Date('May 12, 2025 00:00:00').getTime(); // Target date\n\n  const [timeLeft, setTimeLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n\n  // Update the timer every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = targetDate - now;\n\n      // If the countdown reaches zero, clear the interval\n      if (distance <= 0) {\n        clearInterval(interval);\n        setTimeLeft({\n          days: 0,\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        });\n      } else {\n        // Calculate remaining time\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n        const hours = Math.floor(distance % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n        const minutes = Math.floor(distance % (1000 * 60 * 60) / (1000 * 60));\n        const seconds = Math.floor(distance % (1000 * 60) / 1000);\n        setTimeLeft({\n          days,\n          hours,\n          minutes,\n          seconds\n        });\n      }\n    }, 1000); // Update every second\n\n    return () => clearInterval(interval); // Clean up on unmount\n  }, [targetDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [timeLeft.days, \"d \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [timeLeft.hours, \"h \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [timeLeft.minutes, \"m \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [timeLeft.seconds, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownTimer, \"vwewljmB3jrOpG1la7jDMqsJLWg=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountdownTimer","_s","targetDate","Date","getTime","timeLeft","setTimeLeft","days","hours","minutes","seconds","interval","setInterval","now","distance","clearInterval","Math","floor","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Jasper/CadenaCast/cadenacast/src/components/votingTimer.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CountdownTimer = () => {\r\n  const targetDate = new Date('May 12, 2025 00:00:00').getTime(); // Target date\r\n\r\n  const [timeLeft, setTimeLeft] = useState({\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  });\r\n\r\n  // Update the timer every second\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = new Date().getTime();\r\n      const distance = targetDate - now;\r\n\r\n      // If the countdown reaches zero, clear the interval\r\n      if (distance <= 0) {\r\n        clearInterval(interval);\r\n        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 });\r\n      } else {\r\n        // Calculate remaining time\r\n        const days = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        const seconds = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        setTimeLeft({ days, hours, minutes, seconds });\r\n      }\r\n    }, 1000); // Update every second\r\n\r\n    return () => clearInterval(interval); // Clean up on unmount\r\n  }, [targetDate]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"countdown-timer\">\r\n        <span>{timeLeft.days}d </span>\r\n        <span>{timeLeft.hours}h </span>\r\n        <span>{timeLeft.minutes}m </span>\r\n        <span>{timeLeft.seconds}s</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountdownTimer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}